//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Restaurant_Management_Client.PropertyServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PropertyServiceReference.IPropertyService")]
    public interface IPropertyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/AddProperty", ReplyAction="http://tempuri.org/IPropertyService/AddPropertyResponse")]
        int AddProperty(Restaurant_Management.Property prpty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/AddProperty", ReplyAction="http://tempuri.org/IPropertyService/AddPropertyResponse")]
        System.Threading.Tasks.Task<int> AddPropertyAsync(Restaurant_Management.Property prpty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/DeleteProperty", ReplyAction="http://tempuri.org/IPropertyService/DeletePropertyResponse")]
        void DeleteProperty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/DeleteProperty", ReplyAction="http://tempuri.org/IPropertyService/DeletePropertyResponse")]
        System.Threading.Tasks.Task DeletePropertyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/GetProperty", ReplyAction="http://tempuri.org/IPropertyService/GetPropertyResponse")]
        Restaurant_Management.Property GetProperty(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/GetProperty", ReplyAction="http://tempuri.org/IPropertyService/GetPropertyResponse")]
        System.Threading.Tasks.Task<Restaurant_Management.Property> GetPropertyAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/GetProperties", ReplyAction="http://tempuri.org/IPropertyService/GetPropertiesResponse")]
        Restaurant_Management.Property[] GetProperties();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/GetProperties", ReplyAction="http://tempuri.org/IPropertyService/GetPropertiesResponse")]
        System.Threading.Tasks.Task<Restaurant_Management.Property[]> GetPropertiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/UpdateProperty", ReplyAction="http://tempuri.org/IPropertyService/UpdatePropertyResponse")]
        void UpdateProperty(Restaurant_Management.Property prprty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/UpdateProperty", ReplyAction="http://tempuri.org/IPropertyService/UpdatePropertyResponse")]
        System.Threading.Tasks.Task UpdatePropertyAsync(Restaurant_Management.Property prprty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/getPropertyPhoto", ReplyAction="http://tempuri.org/IPropertyService/getPropertyPhotoResponse")]
        byte[] getPropertyPhoto(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/getPropertyPhoto", ReplyAction="http://tempuri.org/IPropertyService/getPropertyPhotoResponse")]
        System.Threading.Tasks.Task<byte[]> getPropertyPhotoAsync(string fileName);
        
        // CODEGEN: Generating message contract since the operation UploadImage is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/UploadImage", ReplyAction="http://tempuri.org/IPropertyService/UploadImageResponse")]
        Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse UploadImage(Restaurant_Management_Client.PropertyServiceReference.ItemImageDto request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/UploadImage", ReplyAction="http://tempuri.org/IPropertyService/UploadImageResponse")]
        System.Threading.Tasks.Task<Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse> UploadImageAsync(Restaurant_Management_Client.PropertyServiceReference.ItemImageDto request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/getPropertyBycategory", ReplyAction="http://tempuri.org/IPropertyService/getPropertyBycategoryResponse")]
        Restaurant_Management.Property[] getPropertyBycategory(string category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPropertyService/getPropertyBycategory", ReplyAction="http://tempuri.org/IPropertyService/getPropertyBycategoryResponse")]
        System.Threading.Tasks.Task<Restaurant_Management.Property[]> getPropertyBycategoryAsync(string category);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ItemImageDto", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ItemImageDto {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public byte[] Image;
        
        public ItemImageDto() {
        }
        
        public ItemImageDto(int Id, byte[] Image) {
            this.Id = Id;
            this.Image = Image;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadImageResponse {
        
        public UploadImageResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPropertyServiceChannel : Restaurant_Management_Client.PropertyServiceReference.IPropertyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PropertyServiceClient : System.ServiceModel.ClientBase<Restaurant_Management_Client.PropertyServiceReference.IPropertyService>, Restaurant_Management_Client.PropertyServiceReference.IPropertyService {
        
        public PropertyServiceClient() {
        }
        
        public PropertyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PropertyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PropertyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddProperty(Restaurant_Management.Property prpty) {
            return base.Channel.AddProperty(prpty);
        }
        
        public System.Threading.Tasks.Task<int> AddPropertyAsync(Restaurant_Management.Property prpty) {
            return base.Channel.AddPropertyAsync(prpty);
        }
        
        public void DeleteProperty(int id) {
            base.Channel.DeleteProperty(id);
        }
        
        public System.Threading.Tasks.Task DeletePropertyAsync(int id) {
            return base.Channel.DeletePropertyAsync(id);
        }
        
        public Restaurant_Management.Property GetProperty(int id) {
            return base.Channel.GetProperty(id);
        }
        
        public System.Threading.Tasks.Task<Restaurant_Management.Property> GetPropertyAsync(int id) {
            return base.Channel.GetPropertyAsync(id);
        }
        
        public Restaurant_Management.Property[] GetProperties() {
            return base.Channel.GetProperties();
        }
        
        public System.Threading.Tasks.Task<Restaurant_Management.Property[]> GetPropertiesAsync() {
            return base.Channel.GetPropertiesAsync();
        }
        
        public void UpdateProperty(Restaurant_Management.Property prprty) {
            base.Channel.UpdateProperty(prprty);
        }
        
        public System.Threading.Tasks.Task UpdatePropertyAsync(Restaurant_Management.Property prprty) {
            return base.Channel.UpdatePropertyAsync(prprty);
        }
        
        public byte[] getPropertyPhoto(string fileName) {
            return base.Channel.getPropertyPhoto(fileName);
        }
        
        public System.Threading.Tasks.Task<byte[]> getPropertyPhotoAsync(string fileName) {
            return base.Channel.getPropertyPhotoAsync(fileName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse Restaurant_Management_Client.PropertyServiceReference.IPropertyService.UploadImage(Restaurant_Management_Client.PropertyServiceReference.ItemImageDto request) {
            return base.Channel.UploadImage(request);
        }
        
        public void UploadImage(int Id, byte[] Image) {
            Restaurant_Management_Client.PropertyServiceReference.ItemImageDto inValue = new Restaurant_Management_Client.PropertyServiceReference.ItemImageDto();
            inValue.Id = Id;
            inValue.Image = Image;
            Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse retVal = ((Restaurant_Management_Client.PropertyServiceReference.IPropertyService)(this)).UploadImage(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse> Restaurant_Management_Client.PropertyServiceReference.IPropertyService.UploadImageAsync(Restaurant_Management_Client.PropertyServiceReference.ItemImageDto request) {
            return base.Channel.UploadImageAsync(request);
        }
        
        public System.Threading.Tasks.Task<Restaurant_Management_Client.PropertyServiceReference.UploadImageResponse> UploadImageAsync(int Id, byte[] Image) {
            Restaurant_Management_Client.PropertyServiceReference.ItemImageDto inValue = new Restaurant_Management_Client.PropertyServiceReference.ItemImageDto();
            inValue.Id = Id;
            inValue.Image = Image;
            return ((Restaurant_Management_Client.PropertyServiceReference.IPropertyService)(this)).UploadImageAsync(inValue);
        }
        
        public Restaurant_Management.Property[] getPropertyBycategory(string category) {
            return base.Channel.getPropertyBycategory(category);
        }
        
        public System.Threading.Tasks.Task<Restaurant_Management.Property[]> getPropertyBycategoryAsync(string category) {
            return base.Channel.getPropertyBycategoryAsync(category);
        }
    }
}
